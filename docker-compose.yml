version: '3.8'
services:
  nginx:
    container_name: nginx
    build:
      context: ./infra/docker/nginx
      dockerfile: Dockerfile
    ports:
      - ${WEB_PORT:-80}:80
    tty: true
    restart: always
    depends_on:
      - web

  web:
    container_name: web
    build:
      context: ./infra/docker/web
      dockerfile: Dockerfile
    environment:
      PORT: ${FRONT_PORT:-3000}
      HOST: '0.0.0.0'
    expose:
      - ${FRONT_PORT:-3000}
    volumes:
      - ./web:/app
    stdin_open: true
    tty: true
    restart: always
    depends_on:
      - api

  api:
    container_name: api
    build:
      context: ./infra/docker/api
      dockerfile: Dockerfile
    environment:
      LANG: 'ja_JP.UTF-8'
      TZ: ${TZ:-Asia/Tokyo}
      DB_CONNECTION: 'mysql'
      DB_HOST: 'db'
      DB_PORT: '3306'
      DB_DATABASE: ${MYSQL_DATABASE:-webmemo}
      DB_USERNAME: ${MYSQL_USER:-webmemo}
      DB_PASSWORD: ${MYSQL_PASSWORD:-password}
      SESSION_DOMAIN: 'localhost'
      SESSION_LIFETIME: ${SESSION_LIFETIME:-20160}
      SANCTUM_STATEFUL_DOMAINS: 'localhost'
      SESSION_DRIVER: 'cookie'
    volumes:
      - ./api:/app
    expose:
      - ${API_PORT:-9000}
    tty: true
    restart: always
    depends_on:
      - db

  db:
    image: mariadb:10.4
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-webmemo}
      MYSQL_USER: ${MYSQL_USER:-webmemo}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
      TZ: ${TZ:-Asia/Tokyo}
    volumes:
          - db:/var/lib/mysql
    ports:
      - ${DB_PORT:-13306}:3306
    restart: always

  # testing_db:
  #   image: mariadb:10.4
  #   container_name: testing_db
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${TESTING_MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #     TZ: ${TZ}
  #   volumes:
  #         - testing_db:/var/lib/mysql
  #   ports:
  #     - ${TESTING_DB_PORT}:3306

volumes:
  db:
  # testing_db:
